
db.getCollection('mydata').find({"nm":"xiaoming", "age":"18"}).sort({"ts":1})


// Join query:
users:
{
    "_id": ObjectId("xxx"),
    "name": "xiaoming",
    "entitlements": [
        "roleIds": [
            "1111",
            "2222"
        ]
    ],

}

roles:
{
    "_id": ObjectId("xxx"),
    "name": "xxx",
    "permissionIds": ["xxx", ...]
}

permissions:
{
    "_id": ObjectId("xxx"),
    "name": "xxx",
}

db.getCollection('users').aggregate([
    {"$match": { "name": "xiaoming"}},
    {"$unwind": "$entitlements"},
    {"$unwind": "path": "entitlements.roleIds", "preserveNullAndEmptyArrays": true},
    {"$addFields": {"entitlements.roleIds": {"$toObjectId": "$entitlements.roleIds"}}},
    {"$lookup": {"as": "roles", "foreignField": "_id", "from": "roles", "localField": "entitlements.roleIds"}},
    {"$unwind": {"path": "$roles", "preserveNullAndEmptyArrays": true}},
    {
        "$addFields": {
            "roles.permissionIds": { "$map": { "as": "permissionId", "in": {"$toObjectId": "$$permissionId"}, "input": "$roles.permissionIds"}}
        }
    },
    {"$lookup": {"as": "permissions", "foreignField": "_id", "from": "permissions", "localField": "roles.permissionIds"}},
    {"$project": {"resources": 1, "roles": 1, "name": 1}}

]);

