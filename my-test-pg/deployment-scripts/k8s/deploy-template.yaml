---
apiVersion: v1
kind: Namespace
metadata:
  name: nsapp
  labels:
    namespace: nsapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-test-pg
  namespace: nsapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-test-pg
  template:
    metadata:
      labels:
        app: my-test-pg
    spec:
      containers:
        - name: my-test-pg
#          image: "xxx.com/path/repo/my-test-pg:THE_APP_VERSION"
          image: "my-test-pg:THE_APP_VERSION"
          ports:
            - containerPort: 17780
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 17780
            initialDelaySeconds: 120
            periodSeconds: 30
          env:
            - name: APPID
              valueFrom:
                secretKeyRef:
                  name: my-test-pg-key
                  key: appid
            - name: APPSECRET
              valueFrom:
                secretKeyRef:
                  name: my-test-pg-key
                  key: appsecret
          volumeMounts:
            - name: myvolume
              mountPath: /app/volume
              readOnly: true
      volumes:
        - name: myvolume
          secret:
            secretName: my-test-pg-key
#            items:
#              - key: key.pem
#                path: key.pem

---
apiVersion: v1
kind: Service
metadata:
  name: my-test-pg-service
  namespace: nsapp
  labels:
    app: my-test-pg
spec:
  ports:
    - port: 17780 # between containers for service call for K8s
      targetPort: 17780 # container port
      nodePort: 37780 # by default >30000 for external call
  type: NodePort
  selector:
    app: my-test-pg

---
apiVersion: v1
kind: Secret
metadata:
  name: my-test-pg-key
  namespace: nsapp
type: Opaque
data:
  appid: QVBQMTIzNA==
  appsecret: YOUR_APP_SECRET_BASE64
  key.pem: YOUR_KEY_CONTENT_BASE64
